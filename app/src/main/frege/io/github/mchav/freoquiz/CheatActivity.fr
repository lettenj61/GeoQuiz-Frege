module io.github.mchav.freoquiz.CheatActivity where

import froid.app.Activity
import froid.content.Context
import froid.content.Intent
import froid.view.View
import froid.widget.Button
import froid.widget.TextView
import froid.widget.Toast

native module type Activity where {}

pure native cheatActivity "io.github.mchav.freoquiz.CheatActivity.class" :: Class a
pure native activityCheat "io.github.mchav.freoquiz.R.layout.activity_cheat" :: Int
pure native showAnswerButtonId "io.github.mchav.freoquiz.R.id.showAnswerButton" :: Int
pure native answerTextId "io.github.mchav.freoquiz.R.id.answerTextView" :: Int

extraAnswerIsTrue = "io.github.mchav.freoquiz.answer_is_true"
extraAnswerShown  = "io.github.mchav.geoquiz.answer_shown"

cheatHandler :: MutableIO View -> MutableIO TextView -> Bool -> MutableIO View -> IO ()
cheatHandler btn txt b v = do
    let res = if b == True then "True" else "False"
    txt.setText res
    txt.setVisibility (View.visible)
    btn.setVisibility (View.invisible)

newIntent :: MutableIO Context -> Bool -> IO (MutableIO Intent)
newIntent context a = do
    i <- Intent.new context cheatActivity
    i.putExtra extraAnswerIsTrue a
    return i

wasAnswerShown :: MutableIO Intent -> IO Bool
wasAnswerShown intent = intent.getBooleanExtra extraAnswerShown false

setAnswerShownResult :: MutableIO Activity -> Bool -> IO ()
setAnswerShownResult activity b = do
    intentData <- Intent.new ()
    intentData.putExtra extraAnswerShown b
    activity.setResult (Activity.resultOk) intentData

onCreate :: MutableIO Activity -> IO ()
onCreate !this = do
    context <- this.getApplicationContext
    this.setContentView activityCheat
    intent <- this.getIntent
    answerIsTrue <- intent.getBooleanExtra extraAnswerIsTrue False
    answerTextView <- asTextView this answerTextId
    showAnswer <- this.findViewById showAnswerButtonId
    setOnClick showAnswer (cheatHandler showAnswer answerTextView answerIsTrue)
